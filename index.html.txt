<!DOCTYPE html>
<html lang="id">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Cyber Deploy | YannDev</title>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@600&display=swap');
  body {
    margin: 0;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    background: radial-gradient(circle at top, #0a0018, #000);
    font-family: 'Orbitron', sans-serif;
    color: #fff;
    overflow: hidden;
  }
  .neon-bg {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: repeating-linear-gradient(
      45deg,
      rgba(255, 0, 255, 0.04),
      rgba(0, 255, 255, 0.04) 10px,
      rgba(255, 0, 255, 0.04) 20px
    );
    animation: movebg 12s linear infinite;
    z-index: -1;
  }
  @keyframes movebg { from { background-position: 0 0; } to { background-position: 600px 600px; } }

  .welcome {
    font-size: 1.8em;
    color: #f0f;
    text-shadow: 0 0 10px #f0f, 0 0 30px #0ff;
    margin-bottom: 10px;
    animation: pulse 2s infinite;
  }
  @keyframes pulse {
    0%, 100% { opacity: 1; text-shadow: 0 0 20px #0ff, 0 0 40px #f0f; }
    50% { opacity: 0.8; text-shadow: 0 0 10px #f0f, 0 0 20px #0ff; }
  }

  .card {
    background: rgba(20, 0, 40, 0.85);
    border: 2px solid #0ff;
    box-shadow: 0 0 25px #0ff, inset 0 0 25px #f0f;
    border-radius: 20px;
    padding: 40px;
    text-align: center;
    width: 360px;
    animation: float 6s ease-in-out infinite;
  }
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-6px); }
  }

  input[type="text"], input[type="file"] {
    width: 100%;
    padding: 10px;
    border: none;
    outline: none;
    border-radius: 10px;
    margin-bottom: 20px;
    background: rgba(255, 255, 255, 0.1);
    color: #0ff;
    text-align: center;
  }

  button {
    width: 100%;
    padding: 12px;
    font-size: 1em;
    background: linear-gradient(90deg, #0ff, #f0f);
    border: none;
    border-radius: 10px;
    color: #000;
    font-weight: bold;
    cursor: pointer;
    transition: 0.3s;
    box-shadow: 0 0 20px #0ff;
  }
  button:hover { box-shadow: 0 0 40px #f0f; transform: scale(1.05); }

  .progress-bar {
    width: 100%; background: rgba(255,255,255,0.1);
    border-radius: 10px; height: 8px; margin-top: 10px;
    overflow: hidden; display: none;
  }
  .progress {
    width: 0%; height: 100%; background: linear-gradient(90deg, #0ff, #f0f);
    box-shadow: 0 0 10px #0ff;
    transition: width 0.3s ease;
  }

  .result { margin-top: 20px; font-size: 0.9em; }
  .deploy-link {
    display: inline-block; margin-top: 15px; padding: 10px 20px;
    background: linear-gradient(90deg, #0ff, #f0f);
    color: #000; font-weight: bold; border-radius: 10px;
    text-decoration: none; box-shadow: 0 0 20px #0ff;
  }
  .deploy-link:hover { box-shadow: 0 0 40px #f0f; }

  .credit {
    position: absolute; bottom: 15px;
    font-size: 0.9em; color: #0ff;
    text-shadow: 0 0 10px #0ff, 0 0 20px #f0f;
  }
  .credit span { color: #f0f; }
</style>
</head>
<body>

<div class="neon-bg"></div>
<div class="welcome">‚ö° Welcome to Cyber Deploy ‚ö°</div>

<div class="card">
  <div class="title">üöÄ Deploy ke Vercel</div>
  <input type="text" id="projectName" placeholder="Nama proyek (tanpa spasi)">
  <input type="file" id="zipFile" accept=".zip">
  <button id="deployBtn">Deploy Sekarang</button>
  <div class="progress-bar"><div class="progress" id="progress"></div></div>
  <div class="result" id="result"></div>
</div>

<div class="credit">Created by <span>YannDev</span></div>

<script>
const deployBtn = document.getElementById('deployBtn');
const result = document.getElementById('result');
const progressBar = document.querySelector('.progress-bar');
const progress = document.getElementById('progress');

deployBtn.addEventListener('click', async () => {
  const name = document.getElementById('projectName').value.trim();
  const file = document.getElementById('zipFile').files[0];
  if (!name || !file) return alert('Isi nama proyek dan pilih file ZIP!');

  result.innerHTML = 'üöÄ Upload dan deploy sedang berlangsung...';
  deployBtn.disabled = true;
  progressBar.style.display = 'block';
  progress.style.width = '0%';

  const formData = new FormData();
  formData.append('file', file);
  formData.append('name', name);

  try {
    const xhr = new XMLHttpRequest();
    xhr.open('POST', '/deploy');
    xhr.upload.onprogress = e => {
      if (e.lengthComputable) {
        const percent = (e.loaded / e.total) * 100;
        progress.style.width = percent.toFixed(0) + '%';
      }
    };
    xhr.onload = () => {
      deployBtn.disabled = false;
      if (xhr.status === 200) {
        const res = JSON.parse(xhr.responseText);
        if (res.url) {
          result.innerHTML = `‚úÖ <strong>Deploy Sukses!</strong><br>
          <a class="deploy-link" href="https://${res.url}" target="_blank">üåê Buka Hasil Deploy</a>`;
        } else {
          result.innerHTML = '‚ùå Deploy gagal: ' + (res.error || 'Unknown error');
        }
      } else {
        result.innerHTML = '‚ö†Ô∏è Server error: ' + xhr.status;
      }
    };
    xhr.send(formData);
  } catch (err) {
    console.error(err);
    result.innerHTML = '‚ö†Ô∏è Error: ' + err.message;
    deployBtn.disabled = false;
  }
});
</script>
</body>
</html>
